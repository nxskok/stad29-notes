%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: Summary.dvi
%%CreationDate: Tue Mar 30 12:51:55 2010
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica Helvetica-Bold LINE10 CMMI10 CMR10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips Summary
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.03.30:1251
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3C8578EF9A20A0E06E
4F7ADDAF0E7D1E182D115BF1AD931977325AD391E72E2B13CC108E3726C11099
E2000623188AAAC9F3E233EB253BDD8B0A4759A66A113E066238B0086AC1B634
5ABFF90E4B5ED3FA69C22541981B2BFC9710AEF6B50A8BB53431C7B4D380D721
639E005D6B4688EE16BFF48443E7C9E5FB5BC5883E271CB0342893C0BBC0A879
B7220832FB50103F72F8B5D98CF223DB1D0EE09EE454D9496C392F12478835E1
762DF62F2BCF601F3355828AB3963623C4B9BDBBC761B9DE9EDE67C74277FECB
B3AAEE9240011A2BC34C4879B3673E7EEB374A3FB8ED01FB5FB85AFBC1F7299A
8371255D51560E1946A50092C8E48F3BF180229FF21A1A79020E4BEB512EABF1
02AA111461557961E3B891E4FC323C61D497CCCE9D2586EB93DE4D6FB682B960
B36D5C4AB832F0F8D8CFBA86753A9A919B814D506A80B2A8399C9396D9C94C4B
74FD9890373C583561A49FBED4F520EFC18DBA2E1BFE377A7B11B3684EFA80F5
E9122A94423BC3A5B27D8A4FC17EE6DD29
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 62 /greater put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176676ABB71BBD0EE56B4CC492C0652750227CEC7B86E4740EB7B8775564
332769DD30794E501BBB0E4E5CB665F3628E10B1137CC8BC5C0A64A310B5E27E
5FD6E3B04DA3914C15987E638A72790AF4073CE9CDBF6E3C749CB4DFF9C54951
A58C386C54BC4E98B102B5E91E8567D2EEEF048F2CBD5D243701D20909290B4B
A3083F632D8552D42DEE0C69A4B14D8B15AA082DECC12B2ECAE6F663E6D09F81
EE2979EF41FBF12C9D8BF23B77E0A20088EBD107C5BF9DD6F03FFC3AB65B69A7
54953327E1D4AEF5A146273392BBDB321D4CC9A8FFFCFE5C515B466E21546CC7
C6209E5A76F916B03DB98BC6CED334F33E7B373D42761696F5A876CA6F93F16E
15A07E2E102148CA4F62A99C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LINE10
%!PS-AdobeFont-1.1: LINE10 1.001
%%CreationDate: 1992 Oct 23 20:22:05
%%RevisionDate: 2001 Jun 05 20:22:05
% Copyright (C) 1997, 2001 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.001) readonly def
/Notice (Copyright (C) 1997, 2001 American Mathematical Society. All Rights Reserved) readonly def
/FullName (LINE10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /LINE10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /a0 put
dup 27 /a27 put
dup 45 /a45 put
dup 54 /a54 put
dup 63 /a63 put
dup 64 /a64 put
readonly def
/FontBBox{-150 -150 1020 1020}readonly def
currentdict end
currentfile eexec
D9D66F637A9E5292A4933615152D29EEC26E1BED2E48CAB7AC058698EA30B07E
F8BDB66981B14445E1107420FDAF32EDBD5C26E35B334E3AF24373B2A13984D9
1D56801ACCF98612DE2C19685E0F4D52369AD642D169AB57DAB10665C6C01538
497544391FABD08A483766E9B5C7ABA9A537C053A8ADC16DEBD8B5C9E1EDEB21
E4E89B0945C0737B96F0194585BE0D9B958F1030EA84710C31971BA7E93777C2
0658995DC8702442780303E948079822B9EE0C531A5CC49578EB9E683CB77495
DF613FBDC4536BD7A90F044B7EEE6EACA2042539F62789EA39AA16433AC4BD0F
98AAA04894F5487C279D2766B50B23E16D7F1023E387FA4165DF522DB290D390
B669550A43638C3C9CC38C7667A22D27F9DB1542620110A8671B2713C8DB93D3
4C500474AC190831F9C7441DC4A7C27EE88DAEF10D7AEE6FDB22E7625E802B4C
FCEE0DC79988734BDA39B9896B1833D4BEC4F91DB321F343F57B3FC5ECA13AEA
AB108165934BDE65D2EB5A62BD395ABA20F0389A1B71270649CE1A93B29040EB
B3166F9EBC3791671B6EDCEB171F3CCDAA90BBD5EE5042AAC2AD6D838F79E008
43845E5FCF0B3D71E21543F491832420B45492BFE5D3E278268908D3CA704A48
AF6C6954A03244409C49A178680D62BC6277BE6A8CF4DFFA69775BB8FCFE579F
0DFD00493CC18A38F7AA197A43E96F5986EB21F77B0C955332C87B18A5F72982
E3D0B0554AE03D86FF10237036E2CBE514A9BFC5A4F5B2C9E5667EE2B64AB536
766C45D847C52B75FCF57652200536319F09D0FCEA025A5F5CA61CD63812083D
CE11E82271251C41D0550CF754C13A32F847CC7ED53C14742D3C5AF8E412E542
DAC233E8C9FA03A4ED4BB95A9B831AF45E02D31003517156A429F54B6E1B1727
520DE349B22A26C73A2D3CCE0733F2E594DD8E091E2464A31B86C81CF3616399
F042260B75E2F3010CC15E843A7F7388C01BA40AC4E4F1D50059A55BB5111089
F167B796709EE54D544E1AF445A3E791EDC71A6D6F2F298A20014956D52138CE
FB138CE99299A8B41905FF98D3187C923F04EF8743BED86B27FFA470900953EA
EAA4DF0461EFC983488C0001F3DE4122B6AF7DF70B73B258257711ECE8AD12C9
DEB70D58D38372A70FA48131792134EC5DF75032144F71348E46BE6314D14C25
332626676C5408956B4105C462CD90CB252A7F1CC7635BF622CB8E6425EA3376
FFBAFA92239DFE1F1F6BDEF3ED71F4883BDA0E0BCECAD4A654119A64E728358E
C2D69E00CF5E10683CF076932D7C049261E7D48120AA157D48CD8F680C108660
8819E7CD52FC83A6AE87612715A91A9119EB7F93E45BAE89B2E9659398025C0A
BBB545A8CAC659D9C4D1A1E00786B68D7FF65DC085E84D85906102DB737A275B
F282A26578D1C892BCF128DD5A07A1D2F44D09DD7EE66616EC1385C4539BE4BD
CCC808B155D61F7E927A81FCC9F4F067BC989484EEBFF62611EF3E0BA29AAF39
7895EB24334794A950D776AA72FF70F2DE6A75DEF02FFB53A798CB39781B0845
885864292A120A0B249BA50EB565274927E162508D020ED311070A7A54007643
63DD92194A46A0E84BD0E7ED432CF2B3D2415FE803EB4D9A3D9A3A57342EE11A
CB980D19A40CA4837FFDC7540F00DF68CBD8F4E425049541513F5C5EB5DE7E7A
1676EBF2DAAA6EE916B10FAAF8B7B5558BC0AAF8A9ECE247EEE76EEEE3ADF425
1DE4A4465ABB349CFA34E9351D1192E3660C799C20E7AE7DC89FA2BAAA9E8AB3
7B5C3AB74F327B1E3AF8F4C1369551E88F26EA659E2F489970F30A552524A73F
52AECD127501DC3F2A569516600844311A456656D924E6A5EDB59FC72A9F7C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 2074 600 600 (Summary.dvi)
@start /Fa 206[86 49[{}1 172.188 /CMR10 rf /Fb 193[134
62[{}1 172.188 /CMMI10 rf /Fc 134[86 86 124 86 96 48
86 57 96 96 96 96 143 38 2[38 96 96 48 96 96 86 96 96
7[115 2[115 124 105 115 124 1[115 134 124 143 96 2[48
124 134 105 115 124 124 1[115 1[96 11[96 96 96 1[48 2[48
2[57 57 1[115 35[86 2[{TeXBase1Encoding ReEncodeFont}52
172.188 /Helvetica rf /Fd 191[172 172 8[172 8[172 17[172
26[172{}6 172.188 /LINE10 rf /Fe 134[138 3[151 83 138
96 2[151 1[220 4[151 151 83 138 1[138 1[138 13[165 2[165
28[138 138 50[{TeXBase1Encoding ReEncodeFont}17 247.95
/Helvetica-Bold rf /Ff 143[38 60[38 38 38 2[19 23 45[{
TeXBase1Encoding ReEncodeFont}6 68.8751 /Helvetica rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray -600 6000 a
SDict begin [ /Count 0 /Page 1 /View [/XYZ null null null] /Title (Summary of the course) /OUT pdfmark end
 -600
6000 a -600 6000 a
SDict begin [ /Count 0 /Page 2 /View [/XYZ null null null] /Title (Page 2) /OUT pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ /Count 0 /Page 3 /View [/XYZ null null null] /Title (Page 3) /OUT pdfmark end
 -600 6000
a -600 6000 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseOutlines /DOCVIEW pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ /CropBox [0 0 595 840] /PAGES pdfmark end
 -600 6000 a -600
6000 a
SDict begin [ {Catalog} << /ViewerPreferences<</FitWindow true/CenterWindow true>>>> /PUT pdfmark end
 -600 6000 a -600 6000 a
SDict begin H.S end
 -600 6000 a -600 6000
a
SDict begin 12 H.A end
 -600 6000 a -600 6000 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /P (1) >> 1 << /P (2) >> 2 << /P (3) >> ] >> >> /PUT pdfmark end
 -600
6000 a 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 5222 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -59.75093 -37.55782 355.65929 253.22923 .5 Frame  gsave 0.87 0.85 0.7  setrgbcolor fill grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -59.75093 -37.55782 355.65929 -17.07181 .5 Frame  gsave 0.68 0.64 0.11  setrgbcolor fill grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.2 0.45 0.57  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 355.65929 -17.07181 -65.44139 -17.07181  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.2 0.45 0.57  setrgbcolor 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -65.44139 219.65521 15.27919 -17.07181 .5 Frame  gsave 0.2 0.45 0.57  setrgbcolor fill grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -65.44139 253.22923 355.65929 218.65926 .5 Frame  gsave 0.68 0.64 0.11  setrgbcolor fill grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.2 0.45 0.57  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 355.65929 218.80167 -65.44139 218.80167  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.2 0.45 0.57  setrgbcolor 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 0 0.32 0.46  setrgbcolor  0 360 36.98865 19.91682 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub -19.91682 233.31241 Ellipse closepath gsave 0 0.32 0.46  setrgbcolor fill grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.2 0.45 0.57  setrgbcolor  0 360 36.98865 19.91682 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub -19.91682 233.31241 Ellipse closepath gsave 0.8 SLW 0.2 0.45 0.57  setrgbcolor 0 setlinecap stroke  grestore end
 @endspecial 0 0.32 0.46 TeXcolorrgb
1 TeXcolorgray 0 0.32 0.46 TeXcolorrgb 0 TeXcolorgray
0 0.32 0.46 TeXcolorrgb 1 TeXcolorgray 10407 5712 a Ff(-)19
b(p)n(.)g(1)p 0 0.32 0.46 TeXcolorrgb 0 TeXcolorgray
5001 3450 a
SDict begin [ /Rotate 90 /PAGES pdfmark end
 5001 3450 a 5001 3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001
3450 a
SDict begin H.S end
 5001 3450 a 0 TeXcolorgray 0 TeXcolorgray 5001
3450 a
SDict begin H.R end
 5001 3450 a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Producer (dvips + Distiller) /Title () /Subject () /Creator (LaTeX with hyperref and HA-prosper packages) /Author () /Keywords () /DOCINFO pdfmark end
 5001 3450 a 0 0.32 0.46 TeXcolorrgb
1 TeXcolorgray 4168 1270 a Fe(Summar)r(y)71 b(of)e(the)g(cour)l(se)p
0 0.32 0.46 TeXcolorrgb 0 TeXcolorgray 0 0.32 0.46 TeXcolorrgb
5378 3245 a Fd(\000)5550 3073 y(\000)5722 2901 y(\000)5771
2853 y(\000)5378 3417 y(@)5550 3589 y(@)5722 3762 y(@)5771
3810 y(@)6335 3417 y(\000)6163 3589 y(\000)5991 3762
y(\000)5943 3810 y(\000)6335 3245 y(@)6163 3073 y(@)5991
2901 y(@)5943 2853 y(@)5555 3198 y Fc(Response)5596 3413
y(v)l(ar)s(iab)m(le?)6508 3198 y(Y)6112 3810 y(N)p 6508
3249 283 7 v 6618 3246 a Fd(-)6790 3245 y(\000)6962 3073
y(\000)7134 2901 y(\000)7183 2853 y(\000)6790 3417 y(@)6962
3589 y(@)7134 3762 y(@)7183 3810 y(@)7747 3417 y(\000)7575
3589 y(\000)7403 3762 y(\000)7355 3810 y(\000)7747 3245
y(@)7575 3073 y(@)7403 2901 y(@)7355 2853 y(@)7078 3183
y Fc(T)-21 b(ype)48 b(of)6953 3398 y(response?)7524 2807
y(Sur)5 b(viv)l(al)7920 3202 y(Cont)7524 3806 y(Cat)p
7920 3249 V 8030 3246 a Fd(-)8202 3245 y(\000)8374 3073
y(\000)8546 2901 y(\000)8595 2853 y(\000)8202 3417 y(@)8374
3589 y(@)8546 3762 y(@)8595 3810 y(@)9159 3417 y(\000)8987
3589 y(\000)8815 3762 y(\000)8767 3810 y(\000)9159 3245
y(@)8987 3073 y(@)8815 2901 y(@)8767 2853 y(@)8365 3200
y Fc(Number)48 b(of)8322 3380 y(responses?)9332 3198
y(1)8936 3803 y Fb(>)g Fa(1)p 9332 3249 V 9442 3246 a
Fd(-)9614 3245 y(\000)9786 3073 y(\000)9958 2901 y(\000)10007
2853 y(\000)9614 3417 y(@)9786 3589 y(@)9958 3762 y(@)10007
3810 y(@)10571 3417 y(\000)10399 3589 y(\000)10227 3762
y(\000)10179 3810 y(\000)10571 3245 y(@)10399 3073 y(@)10227
2901 y(@)10179 2853 y(@)9722 3198 y Fc(Explanator)5 b(y)9789
3413 y(v)l(ar)s(iab)m(les?)10348 2807 y(Cont)10348 3808
y(Else)p 10175 2680 7 283 v 10179 2570 a Fd(6)p 9607
1833 1144 7 v 9607 2398 7 565 v 9744 2050 a Fc(Reg)n(ression)9664
2267 y(\(PR)m(OC)48 b(REG\))p 10743 2398 V 9607 2405
1144 7 v 10175 4092 7 283 v 10179 4092 a Fd(?)p 9607
4092 1144 7 v 9607 4657 7 565 v 9788 4238 a Fc(ANO)-9
b(V)-14 b(A)48 b(or)9826 4420 y(ANCO)-9 b(V)-14 b(A)9664
4602 y(\(PR)m(OC)48 b(GLM\))p 10743 4657 V 9607 4664
1144 7 v 8763 4318 7 509 v 8763 4601 7 283 v 8767 4601
a Fd(?)8202 5165 y(\000)8374 4993 y(\000)8546 4821 y(\000)8595
4773 y(\000)8202 5338 y(@)8374 5510 y(@)8546 5682 y(@)8595
5730 y(@)9159 5338 y(\000)8987 5510 y(\000)8815 5682
y(\000)8767 5730 y(\000)9159 5165 y(@)8987 4993 y(@)8815
4821 y(@)8767 4773 y(@)8393 5118 y Fc(Repeated)8341 5333
y(Measures?)8087 5119 y(Y)1130 b(N)p 7920 5169 283 7
v 7920 5166 a Fd(\033)p 6783 4883 1144 7 v 6783 5448
7 565 v 7111 5013 a Fc(Pro\002le)6845 5193 y(\(PR)m(OC)48
b(GLM/)6872 5408 y(REPEA)-21 b(TED\))p 7920 5448 V 6783
5455 1144 7 v 9332 5169 283 7 v 9442 5166 a Fd(-)p 9607
4883 1144 7 v 9607 5448 7 565 v 9817 5012 a Fc(MANO)-9
b(V)-14 b(A)9669 5194 y(\(PR)m(OC)48 b(GLM/)9788 5409
y(MANO)-9 b(V)-14 b(A\))p 10743 5448 V 9607 5455 1144
7 v 7351 4092 7 283 v 7355 4092 a Fd(?)p 6783 4092 1144
7 v 6783 4657 7 565 v 7085 4417 a Fc(P)-7 b(age)47 b(2)p
7920 4657 V 6783 4664 1144 7 v 7351 2680 7 283 v 7355
2570 a Fd(6)p 6783 1833 1144 7 v 6783 2398 7 565 v 7048
1965 a Fc(Sur)5 b(viv)l(al)7044 2142 y(analysis)6720
2357 y(\(PR)m(OC)49 b(PHREG\))p 7920 2398 V 6783 2405
1144 7 v 5939 4092 7 283 v 5943 4092 a Fd(?)p 5371 4092
1144 7 v 5371 4657 7 565 v 5673 4417 a Fc(P)-7 b(age)47
b(3)p 6508 4657 V 5371 4664 1144 7 v 0 TeXcolorgray 4500
6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500
6000 a 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -59.75093 -37.55782 355.65929 253.22923 .5 Frame  gsave 0.87 0.85 0.7  setrgbcolor fill grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -59.75093 -37.55782 355.65929 -17.07181 .5 Frame  gsave 0.68 0.64 0.11  setrgbcolor fill grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.2 0.45 0.57  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 355.65929 -17.07181 -65.44139 -17.07181  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.2 0.45 0.57  setrgbcolor 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -65.44139 219.65521 15.27919 -17.07181 .5 Frame  gsave 0.2 0.45 0.57  setrgbcolor fill grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -65.44139 253.22923 355.65929 218.65926 .5 Frame  gsave 0.68 0.64 0.11  setrgbcolor fill grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.2 0.45 0.57  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 355.65929 218.80167 -65.44139 218.80167  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.2 0.45 0.57  setrgbcolor 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 0 0.32 0.46  setrgbcolor  0 360 36.98865 19.91682 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub -19.91682 233.31241 Ellipse closepath gsave 0 0.32 0.46  setrgbcolor fill grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.2 0.45 0.57  setrgbcolor  0 360 36.98865 19.91682 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub -19.91682 233.31241 Ellipse closepath gsave 0.8 SLW 0.2 0.45 0.57  setrgbcolor 0 setlinecap stroke  grestore end

@endspecial 0 0.32 0.46 TeXcolorrgb 1 TeXcolorgray 0 0.32 0.46
TeXcolorrgb 0 TeXcolorgray 0 0.32 0.46 TeXcolorrgb 1
TeXcolorgray 10407 5712 a Ff(-)19 b(p)n(.)g(2)p 0 0.32 0.46
TeXcolorrgb 0 TeXcolorgray 5001 3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001
3450 a
SDict begin H.S end
 5001 3450 a 0 TeXcolorgray 0 TeXcolorgray 5001
3450 a
SDict begin H.R end
 5001 3450 a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 0 0.32 0.46 TeXcolorrgb 1 TeXcolorgray
4168 1270 a Fe(P)-7 b(a)n(g)r(e)69 b(2)p 0 0.32 0.46
TeXcolorrgb 0 TeXcolorgray 0 0.32 0.46 TeXcolorrgb 5378
2398 a Fd(\000)5550 2226 y(\000)5722 2054 y(\000)5771
2005 y(\000)5378 2570 y(@)5550 2742 y(@)5722 2915 y(@)5771
2963 y(@)6335 2570 y(\000)6163 2742 y(\000)5991 2915
y(\000)5943 2963 y(\000)6335 2398 y(@)6163 2226 y(@)5991
2054 y(@)5943 2005 y(@)5555 2351 y Fc(Response)5596 2566
y(v)l(ar)s(iab)m(le?)6508 2351 y(Y)6112 2963 y(N)p 6508
2401 283 7 v 6618 2398 a Fd(-\000)6962 2226 y(\000)7134
2054 y(\000)7183 2005 y(\000)6790 2570 y(@)6962 2742
y(@)7134 2915 y(@)7183 2963 y(@)7747 2570 y(\000)7575
2742 y(\000)7403 2915 y(\000)7355 2963 y(\000)7747 2398
y(@)7575 2226 y(@)7403 2054 y(@)7355 2005 y(@)7078 2336
y Fc(T)-21 b(ype)48 b(of)6953 2550 y(response?)7920 2355
y(Cont)7524 2959 y(Cat)p 7920 2401 565 7 v 8484 2401
283 7 v 8595 2398 a Fd(-)p 8760 2116 1144 7 v 8760 2680
7 565 v 9062 2440 a Fc(P)-7 b(age)47 b(1)p 9896 2680
V 8760 2687 1144 7 v 7351 3245 7 283 v 7355 3245 a Fd(?)6790
3810 y(\000)6962 3638 y(\000)7134 3466 y(\000)7183 3417
y(\000)6790 3982 y(@)6962 4154 y(@)7134 4326 y(@)7183
4375 y(@)7747 3982 y(\000)7575 4154 y(\000)7403 4326
y(\000)7355 4375 y(\000)7747 3810 y(@)7575 3638 y(@)7403
3466 y(@)7355 3417 y(@)6972 3745 y Fc(Predicting)7092
3961 y(probs?)7920 3763 y(Y)7524 4375 y(N)p 7920 3813
283 7 v 8030 3810 a Fd(-)p 8195 3386 1567 7 v 8195 4233
7 848 v 8687 3638 a Fc(Logistic)8578 3851 y(reg)n(ression)8248
4068 y(\(PR)m(OC)i(LOGISTIC\))p 9755 4233 V 8195 4240
1567 7 v 7351 4657 7 283 v 7355 4657 a Fd(?)p 6642 4657
1426 7 v 6642 5504 7 848 v 6880 4928 a Fc(Discr)s(iminant)7044
5105 y(analysis)6663 5319 y(\(PR)m(OC)f(DISCRIM\))p 8061
5504 V 6642 5511 1426 7 v 5939 3245 7 283 v 5943 3245
a Fd(?)p 5371 3245 1144 7 v 5371 3810 7 565 v 5673 3570
a Fc(P)-7 b(age)47 b(3)p 6508 3810 V 5371 3817 1144 7
v 0 TeXcolorgray 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500
6000 a 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -59.75093 -37.55782 355.65929 253.22923 .5 Frame  gsave 0.87 0.85 0.7  setrgbcolor fill grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -59.75093 -37.55782 355.65929 -17.07181 .5 Frame  gsave 0.68 0.64 0.11  setrgbcolor fill grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.2 0.45 0.57  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 355.65929 -17.07181 -65.44139 -17.07181  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.2 0.45 0.57  setrgbcolor 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -65.44139 219.65521 15.27919 -17.07181 .5 Frame  gsave 0.2 0.45 0.57  setrgbcolor fill grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true -65.44139 253.22923 355.65929 218.65926 .5 Frame  gsave 0.68 0.64 0.11  setrgbcolor fill grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.2 0.45 0.57  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 355.65929 218.80167 -65.44139 218.80167  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.2 0.45 0.57  setrgbcolor 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 0 0.32 0.46  setrgbcolor  0 360 36.98865 19.91682 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub -19.91682 233.31241 Ellipse closepath gsave 0 0.32 0.46  setrgbcolor fill grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.2 0.45 0.57  setrgbcolor  0 360 36.98865 19.91682 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub -19.91682 233.31241 Ellipse closepath gsave 0.8 SLW 0.2 0.45 0.57  setrgbcolor 0 setlinecap stroke  grestore end

@endspecial 0 0.32 0.46 TeXcolorrgb 1 TeXcolorgray 0 0.32 0.46
TeXcolorrgb 0 TeXcolorgray 0 0.32 0.46 TeXcolorrgb 1
TeXcolorgray 10407 5712 a Ff(-)19 b(p)n(.)g(3)p 0 0.32 0.46
TeXcolorrgb 0 TeXcolorgray 5001 3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001
3450 a
SDict begin H.S end
 5001 3450 a 0 TeXcolorgray 0 TeXcolorgray 5001
3450 a
SDict begin H.R end
 5001 3450 a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 0 0.32 0.46 TeXcolorrgb 1 TeXcolorgray
4168 1270 a Fe(P)-7 b(a)n(g)r(e)69 b(3)p 0 0.32 0.46
TeXcolorrgb 0 TeXcolorgray 0 0.32 0.46 TeXcolorrgb 6790
2398 a Fd(\000)6962 2226 y(\000)7134 2054 y(\000)7183
2005 y(\000)6790 2570 y(@)6962 2742 y(@)7134 2915 y(@)7183
2963 y(@)7747 2570 y(\000)7575 2742 y(\000)7403 2915
y(\000)7355 2963 y(\000)7747 2398 y(@)7575 2226 y(@)7403
2054 y(@)7355 2005 y(@)6967 2351 y Fc(Response)7008 2566
y(v)l(ar)s(iab)m(le?)6675 2351 y(Y)7524 2963 y(N)p 6508
2401 283 7 v 6508 2398 a Fd(\033)p 5371 2116 1144 7 v
5371 2680 7 565 v 5745 2352 a Fc(P)-7 b(age)5742 2565
y(1)47 b(&)h(2)p 6508 2680 V 5371 2687 1144 7 v 7351
3245 7 283 v 7355 3245 a Fd(?)6790 3810 y(\000)6962 3638
y(\000)7134 3466 y(\000)7183 3417 y(\000)6790 3982 y(@)6962
4154 y(@)7134 4326 y(@)7183 4375 y(@)7747 3982 y(\000)7575
4154 y(\000)7403 4326 y(\000)7355 4375 y(\000)7747 3810
y(@)7575 3638 y(@)7403 3466 y(@)7355 3417 y(@)6898 3763
y Fc(Explanator)5 b(y)6965 3978 y(v)l(ar)s(iab)m(les?)6522
3767 y(Cat)1130 b(Cont)7524 4373 y(Distances)p 6508 3813
283 7 v 6508 3810 a Fd(\033)p 5371 3245 1144 7 v 5371
4375 7 1130 v 5612 3443 a Fc(Multiw)m(a)-5 b(y)5565 3658
y(frequency)5715 3868 y(tab)m(les)5667 4049 y(\(PR)m(OC)5551
4263 y(CA)-21 b(TMOD\))p 6508 4375 V 5371 4382 1144 7
v 7351 4657 7 283 v 7355 4657 a Fd(?)6790 5222 y(\000)6962
5050 y(\000)7134 4877 y(\000)7183 4829 y(\000)6790 5394
y(@)6962 5566 y(@)7134 5738 y(@)7183 5787 y(@)7747 5394
y(\000)7575 5566 y(\000)7403 5738 y(\000)7355 5787 y(\000)7747
5222 y(@)7575 5050 y(@)7403 4877 y(@)7355 4829 y(@)7125
5283 y Fc(Goal?)6412 5179 y(Gr)5 b(ps)7920 5175 y(Map)p
6508 5225 283 7 v 6508 5222 a Fd(\033)p 5371 4798 1144
7 v 5371 5645 7 848 v 5670 4964 a Fc(Cluster)5622 5141
y(Analysis)5667 5356 y(\(PR)m(OC)5512 5571 y(CLUSTER\))p
6508 5645 V 5371 5652 1144 7 v 7920 5225 283 7 v 8030
5222 a Fd(-)p 8195 4869 1285 7 v 8195 5575 7 706 v 8196
5067 a Fc(Multidimensional)8555 5247 y(Scaling)8318 5464
y(\(PR)m(OC)48 b(MDS\))p 9473 5575 V 8195 5582 1285 7
v 7920 3813 283 7 v 8030 3810 a Fd(-\000)8374 3638 y(\000)8546
3466 y(\000)8595 3417 y(\000)8202 3982 y(@)8374 4154
y(@)8546 4326 y(@)8595 4375 y(@)9159 3982 y(\000)8987
4154 y(\000)8815 4326 y(\000)8767 4375 y(\000)9159 3810
y(@)8987 3638 y(@)8815 3466 y(@)8767 3417 y(@)8494 3780
y Fc(Hidden)8463 3960 y(f)-5 b(actors?)8936 3368 y(N)9332
3763 y(Y)p 8763 3245 7 283 v 8767 3135 a Fd(6)p 8026
1974 1483 7 v 8026 2963 7 989 v 8494 2210 a Fc(Cluster)8456
2388 y(analysis)8042 2603 y(\(PR)m(OC)48 b(CLUSTER,)8295
2817 y(F)-14 b(ASTCLUS\))p 9501 2963 V 8026 2970 1483
7 v 9332 3813 113 7 v 9444 3813 283 7 v 9555 3810 a Fd(-\000)9899
3638 y(\000)10071 3466 y(\000)10119 3417 y(\000)9727
3982 y(@)9899 4154 y(@)10071 4326 y(@)10119 4375 y(@)10684
3982 y(\000)10512 4154 y(\000)10340 4326 y(\000)10292
4375 y(\000)10684 3810 y(@)10512 3638 y(@)10340 3466
y(@)10292 3417 y(@)10020 3745 y Fc(T)-21 b(esting)9806
3961 y(h)-5 b(ypotheses?)10461 3368 y(Y)10461 4375 y(N)p
10288 4657 7 283 v 10292 4657 a Fd(?)p 9508 4657 1567
7 v 9508 5504 7 848 v 9964 4917 a Fc(PCA,)47 b(F)-14
b(A)9520 5120 y(\(PR)m(OC)48 b(PRINCOMP)-31 b(,)9651
5335 y(PR)m(OC)48 b(F)-14 b(A)-5 b(CT)e(OR\))p 11068
5504 V 9508 5511 1567 7 v 10288 3245 7 283 v 10292 3135
a Fd(6)p 9508 2116 1567 7 v 9508 2963 7 848 v 9794 2477
a Fc(Con\002r)t(mator)5 b(y)9587 2692 y(F)-14 b(A)49
b(\(PR)m(OC)f(CALIS\))p 11068 2963 V 9508 2970 1567 7
v 0 TeXcolorgray 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
